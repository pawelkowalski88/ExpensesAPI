// <auto-generated />
using System;
using ExpensesAPI.Domain.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpensesAPI.Domain.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20200518213824_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ExpensesAPI.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("ScopeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScopeId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1024);

                    b.Property<int>("ScopeId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ScopeId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.Scope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Scopes");
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.ScopeUser", b =>
                {
                    b.Property<int>("ScopeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("ScopeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ScopeUser");
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SelectedScopeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SelectedScopeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.Category", b =>
                {
                    b.HasOne("ExpensesAPI.Domain.Models.Scope", "Scope")
                        .WithMany("Categories")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.Expense", b =>
                {
                    b.HasOne("ExpensesAPI.Domain.Models.Category", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpensesAPI.Domain.Models.Scope", "Scope")
                        .WithMany("Expenses")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.Scope", b =>
                {
                    b.HasOne("ExpensesAPI.Domain.Models.User", "Owner")
                        .WithMany("OwnedScopes")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.ScopeUser", b =>
                {
                    b.HasOne("ExpensesAPI.Domain.Models.Scope", "Scope")
                        .WithMany("ScopeUsers")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpensesAPI.Domain.Models.User", "User")
                        .WithMany("ScopeUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesAPI.Domain.Models.User", b =>
                {
                    b.HasOne("ExpensesAPI.Domain.Models.Scope", "SelectedScope")
                        .WithMany()
                        .HasForeignKey("SelectedScopeId");
                });
#pragma warning restore 612, 618
        }
    }
}
